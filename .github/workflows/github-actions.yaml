name: "CI"

on:
  push:
    branches:
      - develop
  # pull_request:
  #   branches:
  #     - master

jobs:

  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker-compose stack
        run: docker-compose -f docker-compose.yaml up -d --build
      - name: Check running containers 
        run: |
          sleep 10  
          docker ps -a
      - name: Check containers logs
        run: |
          sleep 10
          docker-compose logs app
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Install Newman
        run: | 
          npm install -g newman
          npm install -g newman-reporter-htmlextra
      - name: Run integration tests with API
        run: |
          sleep 10
          newman run ./postman/compound_interest.postman_collection.json -d ./tests/data-tests.json
      - name: Create result folder
        run: mkdir -p test-results
      - name: Generate HTML report
        run: |
          sleep 10
          newman run ./postman/compound_interest.postman_collection.json -d ./tests/data-tests.json -r htmlextra --reporter-htmlextra-export ./test-results/htmlreport.html --reporter-htmlextra-darkTheme  > ./test-results/runreport1.html
      - name: Uploading testing content result to workspace
        uses: actions/upload-artifact@v2
        with:
          name: RunReports
          path: test-results
  
  heroku_deploy:
    name: Heroku deploy
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v2
    - name: Login into Heroku
      run: heroku container:login
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP: ${{ secrets.HEROKU_APP }}
    - name: Push to Heroku
      run: heroku container:push -a api_app web
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP: ${{ secrets.HEROKU_APP }}
    - name: Trigger release in Heroku
      run: heroku container:release -a api_app web
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP: ${{ secrets.HEROKU_APP }}

  stop_container:
    name: Stop Containers
    runs-on: ubuntu-latest
    needs: [heroku_deploy]
    steps:
      - uses: actions/checkout@master
      - name: Stop container
        run: docker-compose -f docker-compose.yaml down